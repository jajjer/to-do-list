{"version":3,"sources":["List.jsx","App.jsx","reportWebVitals.jsx","index.jsx"],"names":["List","itemList","updateItemList","map","itemObj","className","item","onClick","key","newList","filter","deleteItemFromList","App","useState","currentItem","setCurrentItem","placeholder","value","onChange","e","console","log","target","Date","now","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oQAuBeA,MArBf,YAA2C,IAA5BC,EAA2B,EAA3BA,SAAUC,EAAiB,EAAjBA,eAOrB,OACA,8BACKD,EAASE,KAAI,SAAAC,GACV,OACA,sBAAuBC,UAAU,OAAjC,UACI,4BAAID,EAAQE,OACZ,wBAAQC,QAAS,kBAZF,SAAAC,GACnB,IAAMC,EAAUR,EAASS,QAAO,SAACN,GACjC,OAAOA,EAAQI,MAAQA,KAE3BN,EAAeO,GAQgBE,CAAmBP,EAAQI,MAAlD,iBAFMJ,EAAQI,WCkBfI,MA3Bf,WAAgB,IAAD,EAC2BC,mBAAS,MADpC,mBACJC,EADI,KACSC,EADT,OAEwBF,mBAAS,IAFjC,mBAEJZ,EAFI,KAEMC,EAFN,KAYX,OACI,qBAAKG,UAAU,MAAf,SACC,yBAAQA,UAAU,aAAlB,UACG,qBAAKA,UAAU,UAAf,SACI,sBAAKA,UAAU,gBAAf,UACI,uBAAOW,YAAY,WAAUC,MAAOH,EAAaI,SAdzC,SAAAC,GACpBC,QAAQC,IAAI,gBAAiBF,EAAEG,OAAOL,OACtCF,EAAeI,EAAEG,OAAOL,UAaZ,wBAAQV,QAVF,WAClBL,EAAe,GAAD,mBAAKD,GAAL,CAAe,CAAEK,KAAMQ,EAAaN,IAAKe,KAAKC,UAC5DT,EAAe,KAQH,oBAGZ,cAAC,EAAD,CAAMd,SAAUA,EAAUC,eAAgBA,UCbnCuB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.dd11b55b.chunk.js","sourcesContent":["import \"./List.css\";\n\nfunction List({itemList, updateItemList}) {\n    const deleteItemFromList = key => {\n            const newList = itemList.filter((itemObj) =>{\n            return itemObj.key !== key;\n        });\n        updateItemList(newList);\n    };\n    return (\n    <div>\n        {itemList.map(itemObj => {\n            return (\n            <div key={itemObj.key} className=\"Item\">\n                <p>{itemObj.item}</p>\n                <button onClick={() => deleteItemFromList(itemObj.key)}>X</button>\n                </div>\n            );\n        })}\n    </div>\n    );\n}\n\nexport default List;","import './App.css';\nimport { useState } from \"react\";\nimport List from './List';\n\nfunction App() {\n    const [currentItem, setCurrentItem] = useState(null);\n    const [itemList, updateItemList] = useState([]);\n    const onChangeHandler = e => {\n        console.log(\"current value\", e.target.value);\n        setCurrentItem(e.target.value);\n    };\n\n    const addItemToList = () => {\n        updateItemList([...itemList, { item: currentItem, key: Date.now() }]);\n        setCurrentItem(\"\");\n    };\n    return ( \n        <div className=\"App\">\n         <header className=\"App-header\">\n            <div className=\"Wrapper\">\n                <div className=\"Input-wrapper\">\n                    <input placeholder=\"Add item\"value={currentItem} onChange={onChangeHandler}/> \n                    <button onClick={addItemToList}>+</button> \n                </div> \n            </div>\n        <List itemList={itemList} updateItemList={updateItemList}/>\n        </header>\n        </div>\n    );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}